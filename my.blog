Day 12: Scalaz
#####
IITK New York Internship
#####
May 14th, 2016
#####
  I have spent the last two days scouring the internet for articles on Scalaz and
understanding Ixchel implementation of the various technologies I have learnt in
the last few days. I have understood Functors to a great deal and will hopefully
understand Monads by tommorrow. And a suitable meme expressing my situation:  
![Monads!!!!!](https://raw.githubusercontent.com/yashsriv/yashsriv.github.io/master/images/monads.jpg)
##########
Day 10: Free Monads
#####
IITK New York Internship
#####
May 12th, 2016
#####
  Yesterday, I went about understanding slick and nearly understood it very well. I tried
creating a database to work with my movie microservice so that once fetched data is cached.
I was not able to implement that due to confusions with future.
  I spent today understanding slick and then trying to understand Ixchel's implementation
of slick using free monads. I was unable to understand a very simple sample, so now I am
going about learning scalaz completely from the basics.
##########
Day 8: Movie Microservice
#####
IITK New York Internship
#####
May 10th, 2016
#####
  Today I finally had enough confidence with akka-http to try and understand the
akka-http-microservice [example](https://github.com/theiterators/akka-http-microservice).
I understood each and every line and why it was like it was and with that knowledge, I
got working on a movie microservice which would return movie info from imdb id.

  I finished it today, and the code can be found at [my repo](https://github.com/yashsriv/akka-movie-microservice).
I intend to add another JSON query which takes movie name and returns movie info by tomorrow morning.
##########
Day 7:Http
#####
IITK New York Internship
#####
May 9th, 2016
#####
  Today I read about akka-streams and got started with akka-http.
I read some akka-streams and then went on with akka-http. By the end of
the day, I was able to make a http server to respond to get requests.
##########
Day 5 and 6: Akka
#####
IITK New York Internship
#####
May 8th, 2016
#####
  The past two days, I have spent wrapping my head about the akka library. Even the example starting
assignments are a little involved and require lightbend activator. I failed miserably at my attempts at installing
lightbend aand now have given up, instead, reading from the online tutorials.

  I spent a good amount of time understanding actors, concurrency and all. I have finally understood the Akka Actors
API thanks to a ping pong example by Alvin Alexandar and now will proceed further with akka-streams and akka-http.
##########
Day 4: Twitter and Scala
#####
IITK New York Office Internship
#####
May 6th, 2016
#####
  Today I gave up on the sentence anagram assignment... I managed all the functions except the last
 one which actually solves the sentence anagrams. I got the algorithm but the `List[List[List[String]]]` were
 getting out of hand, and I was wasting too much time on it so I left it as a good challenge for later on when I
 have some time on my hands. :(

  After that I started twitter's scala school which explains how they use scala in their framework.
 I am having a little diifficulty understanding covariance and stuff but I will probably get a feel
 for it once I program something using that. Currently I am reading about Finagle. Also I noticed that they haven't
 mentioned scala Actors API which I see mentioned everywhere involving a concurrent framework.
##########
Day 3: Huffman Est Cool
#####
IITK New York Office Internship
#####
May 5th, 2016
#####
  Today I nearly finished the course and decided to try the assignments. Major part
 of my day was spent trying out the assignments. The Huffman encoding and decoding
 assignment was good and by the end of the day I nearly finished the Sentence Anagram one.
##########
Day 2: Scala and maths
#####
IITK New York Office Internship
#####
May 4th, 2016
#####
  So today I went on with Martin Odersky's course and just completed week 5.
The  functional equivalent of operator overloading is awesome and I believe
 it allows more verbose and consistent definition of classes which will behave as expected
 if I plug in normal operators. The definition of functions is now more and more
 tending towards how we define them in maths `f: [R, R] => R`.

 I also read about the object oriented implementation of functions and I believe have understood
 functional programming paradigm to a great degree. Scala's elegant combination of both fp and oop
 allows us to implement programs in a better way. Scala's pattern matching is also good enough to allow
 us to implement recursive algorithms in a better way.

 I have also compiled a program highlighting the collections in scala which can be found
 [here](https://gist.github.com/yashsriv/1ed9dad1b25ac606036de7c324bf61ea)
##########
Day 1: When I made my blog
#####
IITK New York Office Internship
#####
May 3rd, 2016
#####
  Well, I was told that I have to document my Internship via a blog
so I chose to make my own blog manager based on a very simple idea.
Currently, there is a ** my.blog ** file in a folder and a script iterates
through all of my updates and displays them here.

  My custom blog reader now converts them to suitable html and displays
them. It currently just converts 2 trailing spaces into &lt;br>.~~In the future,
 I intend for it to parse markdown~~( Guess I was too impatient :P )

  As for the documentation, I had already begun trying to learn scala as soon as I
was informed of my project. I had just gone through basic scala syntax and
differences from java from the book `Programming Scala, O'Reilly` when
I met Adarsh today. After the meeting I took up Martin Odersky's course on
 Coursera. After completing week one and learning about functional programming
 (something very new to me), I wrote my blog parser. Functional Programming is
 powerful and it reminds me of the time when I used to solve, relatively difficult
 problems in C, in Python using a single line of function calls except now I just
 have to define the functions too.
##########
