Day 4: Twitter and Scala
#####
IITK New York Office Internship
#####
May 6th, 2016
#####
  Today I gave up on the sentence anagram assignment... I managed all the functions except the last
 one which actually solves the sentence anagrams. I got the algorithm but the `List[List[List[String]]]` were
 getting out of hand, and I was wasting too much time on it so I left it as a good challenge for later on when I
 have some time on my hands. :(

  After that I started twitter's scala school which explains how they use scala in their framework.
 I am having a little diifficulty understanding covariance and stuff but I will probably get a feel
 for it once I program something using that. Currently I am reading about Finagle. Also I noticed that they haven't
 mentioned scala Actors API which I see mentioned everywhere involving a concurrent framework.
##########
Day 3: Huffman Est Cool
#####
IITK New York Office Internship
#####
May 5th, 2016
#####
  Today I nearly finished the course and decided to try the assignments. Major part
 of my day was spent trying out the assignments. The Huffman encoding and decoding
 assignment was good and by the end of the day I nearly finished the Sentence Anagram one.
##########
Day 2: Scala and maths
#####
IITK New York Office Internship
#####
May 4th, 2016
#####
  So today I went on with Martin Odersky's course and just completed week 5.
The  functional equivalent of operator overloading is awesome and I believe
 it allows more verbose and consistent definition of classes which will behave as expected
 if I plug in normal operators. The definition of functions is now more and more
 tending towards how we define them in maths `f: [R, R] => R`.

 I also read about the object oriented implementation of functions and I believe have understood
 functional programming paradigm to a great degree. Scala's elegant combination of both fp and oop
 allows us to implement programs in a better way. Scala's pattern matching is also good enough to allow
 us to implement recursive algorithms in a better way.

 I have also compiled a program highlighting the collections in scala which can be found
 [here](https://gist.github.com/yashsriv/1ed9dad1b25ac606036de7c324bf61ea)
##########
Day 1: When I made my blog
#####
IITK New York Office Internship
#####
May 3rd, 2016
#####
  Well, I was told that I have to document my Internship via a blog
so I chose to make my own blog manager based on a very simple idea.
Currently, there is a ** my.blog ** file in a folder and a script iterates
through all of my updates and displays them here.

  My custom blog reader now converts them to suitable html and displays
them. It currently just converts 2 trailing spaces into <br>.~~In the future,
 I intend for it to parse markdown~~( Guess I was too impatient :P )

  As for the documentation, I had already begun trying to learn scala as soon as I
was informed of my project. I had just gone through basic scala syntax and
differences from java from the book `Programming Scala, O'Reilly` when
I met Adarsh today. After the meeting I took up Martin Odersky's course on
 Coursera. After completing week one and learning about functional programming
 (something very new to me), I wrote my blog parser. Functional Programming is
 powerful and it reminds me of the time when I used to solve, relatively difficult
 problems in C, in Python using a single line of function calls except now I just
 have to define the functions too.
##########
